{"ast":null,"code":"var _jsxFileName = \"/Users/santhoshmg/Projects/mental-wellness/src/Screen/ChatFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ref, push, onValue, getDatabase } from \"firebase/database\";\nimport { getDownloadURL, getStorage, ref as storageRef, uploadBytes } from \"@firebase/storage\";\nimport backgroundImage from \"../bg4.jpeg\";\n\n// Assuming Firebase is correctly configured and imported\nimport { app } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatFile = () => {\n  _s();\n  const {\n    chatUsername,\n    roomId\n  } = useParams();\n  const database = getDatabase(app);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [username, setUsername] = useState(\"Guest\");\n  const messagesRef = ref(database, `chats/${roomId}`);\n  const storagePath = `images`;\n  useEffect(() => {\n    setUsername(chatUsername);\n    onValue(messagesRef, snapshot => {\n      const messagesData = snapshot.val();\n      setMessages(Object.values(messagesData) || []);\n    });\n  }, []);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (file) {\n      try {\n        const storage = getStorage();\n        const imageRef = ref(storage, storagePath);\n        const uploadTask = uploadBytes(imageRef, file);\n        const snapshot = await uploadTask;\n        const fileURL = await getDownloadURL(snapshot.ref);\n        const imageMessage = {\n          username,\n          image: fileURL\n        };\n        push(messagesRef, imageMessage);\n        setFile(null);\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        // Handle error gracefully, e.g., display an error message to the user\n      }\n    } else if (newMessage.trim()) {\n      const textMessage = {\n        username,\n        text: newMessage.trim()\n      };\n      push(messagesRef, textMessage);\n    }\n    setNewMessage(\"\");\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Chat with \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"300px\",\n        border: \"1px solid #ccc\",\n        overflowY: \"scroll\"\n      },\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), \" \", message.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), message.image && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [message.username, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: message.image,\n            alt: `${message.username}'s image`,\n            style: {\n              maxWidth: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatFile, \"kyxJlGYJki8+A8aGHT32T9MnAzM=\", false, function () {\n  return [useParams];\n});\n_c = ChatFile;\nexport default ChatFile;\nvar _c;\n$RefreshReg$(_c, \"ChatFile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ref","push","onValue","getDatabase","getDownloadURL","getStorage","storageRef","uploadBytes","backgroundImage","app","jsxDEV","_jsxDEV","ChatFile","_s","chatUsername","roomId","database","messages","setMessages","newMessage","setNewMessage","file","setFile","username","setUsername","messagesRef","storagePath","snapshot","messagesData","val","Object","values","handleSendMessage","e","preventDefault","storage","imageRef","uploadTask","fileURL","imageMessage","image","error","console","trim","textMessage","text","handleFileChange","selectedFile","target","files","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","border","overflowY","map","message","index","src","alt","maxWidth","onSubmit","type","value","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/santhoshmg/Projects/mental-wellness/src/Screen/ChatFile.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ref, push, onValue, getDatabase } from \"firebase/database\";\nimport {\n  getDownloadURL,\n  getStorage,\n  ref as storageRef,\n  uploadBytes,\n} from \"@firebase/storage\";\nimport backgroundImage from \"../bg4.jpeg\";\n\n// Assuming Firebase is correctly configured and imported\nimport { app } from \"../firebase\";\n\nconst ChatFile = () => {\n  const { chatUsername, roomId } = useParams();\n  const database = getDatabase(app);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [username, setUsername] = useState(\"Guest\");\n\n  const messagesRef = ref(database, `chats/${roomId}`);\n  const storagePath = `images`;\n\n  useEffect(() => {\n    setUsername(chatUsername);\n\n    onValue(messagesRef, (snapshot) => {\n      const messagesData = snapshot.val();\n      setMessages(Object.values(messagesData) || []);\n    });\n  }, []);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n\n    if (file) {\n      try {\n        const storage = getStorage();\n        const imageRef = ref(storage, storagePath);\n        const uploadTask = uploadBytes(imageRef, file);\n\n        const snapshot = await uploadTask;\n        const fileURL = await getDownloadURL(snapshot.ref);\n\n        const imageMessage = { username, image: fileURL };\n        push(messagesRef, imageMessage);\n        setFile(null);\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        // Handle error gracefully, e.g., display an error message to the user\n      }\n    } else if (newMessage.trim()) {\n      const textMessage = { username, text: newMessage.trim() };\n      push(messagesRef, textMessage);\n    }\n\n    setNewMessage(\"\");\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n\n  return (\n    <div>\n      <h2>Chat with {username}</h2>\n      <div\n        style={{\n          height: \"300px\",\n          border: \"1px solid #ccc\",\n          overflowY: \"scroll\",\n        }}\n      >\n        {messages.map((message, index) => (\n          <div key={index}>\n            {message.text && (\n              <div>\n                <strong>{message.username}:</strong> {message.text}\n              </div>\n            )}\n            {message.image && (\n              <div>\n                <strong>{message.username}:</strong>\n                <img\n                  src={message.image}\n                  alt={`${message.username}'s image`}\n                  style={{ maxWidth: \"100%\" }}\n                />\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSendMessage}>\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Type your message...\"\n        />\n        <input type=\"file\" onChange={handleFileChange} />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatFile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}