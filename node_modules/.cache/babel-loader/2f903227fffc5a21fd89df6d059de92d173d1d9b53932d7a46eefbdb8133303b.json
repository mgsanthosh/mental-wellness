{"ast":null,"code":"var _jsxFileName = \"/Users/santhoshmg/Projects/mental-wellness/src/Context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const websiteState = {\n    moodTracker: \"\",\n    questionsSelected: [],\n    userData: null,\n    date: null\n  };\n  const websiteDataKey = \"websitedata\";\n  function isEightHoursPassed() {\n    const earlierTimestamp = new Date(websiteState.date).getTime(); // Replace this with your earlier recorded time\n    const currentTimestamp = new Date().getTime();\n    const eightHoursInMilliseconds = 8 * 60 * 60 * 1000; // 8 hours in milliseconds\n    const timeDifference = currentTimestamp - earlierTimestamp;\n    console.log;\n    return timeDifference >= eightHoursInMilliseconds;\n  }\n  const getDateFormat = () => {\n    const date = new Date();\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Note: Month starts from 0\n    const year = date.getFullYear().toString();\n    const hours = date.getHours().toString().padStart(2, \"0\");\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\n    const formattedDate = `${day}/${month}/${year} ${hours}:${minutes}`;\n    return formattedDate;\n  };\n  const setMoodTracker = mood => {\n    websiteState.moodTracker = mood;\n    websiteState.date = new Date();\n    localStorage.setItem(websiteDataKey, JSON.stringify(websiteState));\n  };\n  const setQuestionsList = list => {\n    websiteState.questionsSelected = list;\n    websiteState.date = new Date();\n    localStorage.setItem(websiteDataKey, JSON.stringify(websiteState));\n  };\n  const setUserInformation = userInfo => {\n    websiteState.userData = userInfo;\n    websiteState.date = new Date();\n    localStorage.setItem(websiteDataKey, JSON.stringify(websiteState));\n  };\n  const getWebsiteState = () => {\n    const val = JSON.parse(localStorage.getItem(websiteDataKey));\n    return val;\n  };\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setUser(user);\n    });\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      websiteState,\n      setMoodTracker,\n      setQuestionsList,\n      setUserInformation,\n      getWebsiteState,\n      getDateFormat\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","auth","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","websiteState","moodTracker","questionsSelected","userData","date","websiteDataKey","isEightHoursPassed","earlierTimestamp","Date","getTime","currentTimestamp","eightHoursInMilliseconds","timeDifference","console","log","getDateFormat","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","formattedDate","setMoodTracker","mood","localStorage","setItem","JSON","stringify","setQuestionsList","list","setUserInformation","userInfo","getWebsiteState","val","parse","getItem","unsubscribe","onAuthStateChanged","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/santhoshmg/Projects/mental-wellness/src/Context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const websiteState = {\n    moodTracker: \"\",\n    questionsSelected: [],\n    userData: null,\n    date: null,\n  };\n  const websiteDataKey = \"websitedata\";\n\n  function isEightHoursPassed() {\n    const earlierTimestamp = new Date(websiteState.date).getTime(); // Replace this with your earlier recorded time\n    const currentTimestamp = new Date().getTime();\n    const eightHoursInMilliseconds = 8 * 60 * 60 * 1000; // 8 hours in milliseconds\n    const timeDifference = currentTimestamp - earlierTimestamp;\n    console.log;\n    return timeDifference >= eightHoursInMilliseconds;\n  }\n\n  const getDateFormat = () => {\n    const date = new Date();\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Note: Month starts from 0\n    const year = date.getFullYear().toString();\n    const hours = date.getHours().toString().padStart(2, \"0\");\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\n\n    const formattedDate = `${day}/${month}/${year} ${hours}:${minutes}`;\n    return formattedDate;\n  };\n\n  const setMoodTracker = (mood) => {\n    websiteState.moodTracker = mood;\n    websiteState.date = new Date();\n\n    localStorage.setItem(websiteDataKey, JSON.stringify(websiteState));\n  };\n\n  const setQuestionsList = (list) => {\n    websiteState.questionsSelected = list;\n    websiteState.date = new Date();\n\n    localStorage.setItem(websiteDataKey, JSON.stringify(websiteState));\n  };\n\n  const setUserInformation = (userInfo) => {\n    websiteState.userData = userInfo;\n    websiteState.date = new Date();\n\n    localStorage.setItem(websiteDataKey, JSON.stringify(websiteState));\n  };\n\n  const getWebsiteState = () => {\n    const val = JSON.parse(localStorage.getItem(websiteDataKey));\n    return val;\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setUser(user);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        setUser,\n        websiteState,\n        setMoodTracker,\n        setQuestionsList,\n        setUserInformation,\n        getWebsiteState,\n        getDateFormat,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}