{"ast":null,"code":"var _jsxFileName = \"/Users/santhoshmg/Projects/mental-wellness/src/Screen/ChatFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ref, push, onValue, getDatabase } from \"firebase/database\";\nimport { getDownloadURL, getStorage, ref as storageRef, uploadBytes } from \"@firebase/storage\";\nimport backgroundImage from \"../bg.jpeg\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\n// Assuming Firebase is correctly configured and imported\nimport { app } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatFile = () => {\n  _s();\n  const {\n    chatUsername,\n    roomId\n  } = useParams();\n  const database = getDatabase(app);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [username, setUsername] = useState(\"Guest\");\n  const authContext = useContext(AuthContext);\n  const messagesRef = ref(database, `chats/${roomId}`);\n  const storagePath = `images`;\n  const navigate = useNavigate();\n  useEffect(() => {\n    setUsername(chatUsername);\n    onValue(messagesRef, snapshot => {\n      const messagesData = snapshot.val();\n      if (messagesData) {\n        setMessages(Object.values(messagesData) || []);\n      } else {\n        setMessages([]);\n      }\n    });\n  }, []);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    const localData = authContext.getWebsiteState();\n    if (file) {\n      try {\n        const storage = getStorage();\n        const imageRef = ref(storage, storagePath);\n        const uploadTask = uploadBytes(imageRef, file);\n        const snapshot = await uploadTask;\n        const fileURL = await getDownloadURL(snapshot.ref);\n        const imageMessage = {\n          username,\n          image: fileURL\n        };\n        push(messagesRef, imageMessage);\n        setFile(null);\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        // Handle error gracefully, e.g., display an error message to the user\n      }\n    } else if (newMessage.trim()) {\n      const textMessage = {\n        username,\n        text: newMessage.trim()\n      };\n      push(messagesRef, textMessage);\n    }\n    setNewMessage(\"\");\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-main-container\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"homeButton\",\n      onClick: () => navigate(\"/expert-chat-list\"),\n      children: \"Go Back To Chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"#fff\"\n      },\n      children: [\"Chat with \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-screen-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message.username === username ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selfTextContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selfChatBubbleContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selfMessageContainer\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nameContainerSelf\",\n              children: message.username[0].toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"oppositeTextContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"oppositeChatBubbleContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nameContainerOpposite\",\n              children: message.username[0].toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"oppMessageContainer\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"sendTextInput\",\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sendButton\",\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatFile, \"WWvrLsTpc4RGHPpjpeMWgpHyRBw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChatFile;\nexport default ChatFile;\nvar _c;\n$RefreshReg$(_c, \"ChatFile\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","ref","push","onValue","getDatabase","getDownloadURL","getStorage","storageRef","uploadBytes","backgroundImage","useNavigate","AuthContext","app","jsxDEV","_jsxDEV","ChatFile","_s","chatUsername","roomId","database","messages","setMessages","newMessage","setNewMessage","file","setFile","username","setUsername","authContext","messagesRef","storagePath","navigate","snapshot","messagesData","val","Object","values","handleSendMessage","e","preventDefault","localData","getWebsiteState","storage","imageRef","uploadTask","fileURL","imageMessage","image","error","console","trim","textMessage","text","handleFileChange","selectedFile","target","files","className","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","color","map","message","index","toUpperCase","onSubmit","type","value","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/santhoshmg/Projects/mental-wellness/src/Screen/ChatFile.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ref, push, onValue, getDatabase } from \"firebase/database\";\nimport {\n  getDownloadURL,\n  getStorage,\n  ref as storageRef,\n  uploadBytes,\n} from \"@firebase/storage\";\nimport backgroundImage from \"../bg.jpeg\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../Context/AuthContext\";\n\n// Assuming Firebase is correctly configured and imported\nimport { app } from \"../firebase\";\n\nconst ChatFile = () => {\n  const { chatUsername, roomId } = useParams();\n  const database = getDatabase(app);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [username, setUsername] = useState(\"Guest\");\n  const authContext = useContext(AuthContext);\n\n  const messagesRef = ref(database, `chats/${roomId}`);\n  const storagePath = `images`;\n  const navigate = useNavigate();\n  useEffect(() => {\n    setUsername(chatUsername);\n\n    onValue(messagesRef, (snapshot) => {\n      const messagesData = snapshot.val();\n      if (messagesData) {\n        setMessages(Object.values(messagesData) || []);\n      } else {\n        setMessages([]);\n      }\n    });\n  }, []);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    const localData = authContext.getWebsiteState();\n    if (file) {\n      try {\n        const storage = getStorage();\n        const imageRef = ref(storage, storagePath);\n        const uploadTask = uploadBytes(imageRef, file);\n\n        const snapshot = await uploadTask;\n        const fileURL = await getDownloadURL(snapshot.ref);\n\n        const imageMessage = { username, image: fileURL };\n        push(messagesRef, imageMessage);\n        setFile(null);\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        // Handle error gracefully, e.g., display an error message to the user\n      }\n    } else if (newMessage.trim()) {\n      const textMessage = { username, text: newMessage.trim() };\n      push(messagesRef, textMessage);\n    }\n\n    setNewMessage(\"\");\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n\n  return (\n    <div\n      className=\"chat-main-container\"\n      style={{ backgroundImage: `url(${backgroundImage})` }}\n    >\n      <button\n        className=\"homeButton\"\n        onClick={() => navigate(\"/expert-chat-list\")}\n      >\n        Go Back To Chats\n      </button>\n      <h1 style={{ color: \"#fff\" }}>Chat with {username}</h1>\n      <div className=\"chat-screen-container\">\n        {messages.map((message, index) => (\n          <div key={index}>\n            {message.username === username ? (\n              <div className=\"selfTextContainer\">\n                <div className=\"selfChatBubbleContainer\">\n                  <div className=\"selfMessageContainer\">{message.text}</div>\n\n                  <div className=\"nameContainerSelf\">\n                    {message.username[0].toUpperCase()}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"oppositeTextContainer\">\n                <div className=\"oppositeChatBubbleContainer\">\n                  <div className=\"nameContainerOpposite\">\n                    {message.username[0].toUpperCase()}\n                  </div>\n                  <div className=\"oppMessageContainer\">{message.text}</div>\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n        <form onSubmit={handleSendMessage}>\n          <div className=\"inputContainer\">\n            <input\n              className=\"sendTextInput\"\n              type=\"text\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              placeholder=\"Type your message...\"\n            />\n            <input type=\"file\" onChange={handleFileChange} />\n            <button className=\"sendButton\" type=\"submit\">\n              Send\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatFile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}