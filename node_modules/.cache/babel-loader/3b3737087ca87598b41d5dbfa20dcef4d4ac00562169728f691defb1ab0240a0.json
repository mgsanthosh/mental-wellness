{"ast":null,"code":"var _jsxFileName = \"/Users/santhoshmg/Projects/mental-wellness/src/Screen/Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = props => {\n  _s();\n  const [responses, setResponses] = useState({});\n  const handleCheckboxChange = (question, isChecked) => {\n    console.log(\"The Question \", q);\n    setResponses(prevResponses => ({\n      ...prevResponses,\n      [question]: isChecked\n    }));\n  };\n  const questions = [{\n    question: \"Is there any change in your sleep pattern, appetite, or energy level?\",\n    type: \"Yes/No\",\n    category: []\n  }, {\n    question: \"Have you been consistently feeling anxious or overwhelmed lately?\",\n    type: \"Yes/No\",\n    category: []\n  }, {\n    question: \"Have you had sudden moments of intense fear or panic recently?\",\n    type: \"Yes/No\",\n    category: []\n  }, {\n    question: \"Have your moods been noticeably changing frequently?\",\n    type: \"Yes/No\",\n    category: []\n  }, {\n    question: \"Have you been feeling depressed lately?\",\n    type: \"Yes/No\",\n    category: []\n  }, {\n    question: \"Do you experience physical symptoms such as tension or headaches when stressed?\",\n    type: \"Yes/No\",\n    category: []\n  }, {\n    question: \"Have you been experiencing a lack of calmness recently?\",\n    type: \"Yes/No\",\n    category: []\n  }];\n  const category = {\n    \"\": \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Questionnaire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            color: \"#513d87\",\n            fontSize: \"20px\",\n            fontWeight: \"500\",\n            margin: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: responses[q.question] || false,\n            onChange: e => handleCheckboxChange(q.question, e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), q.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, q.question, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Questions, \"p+LtuSuoZ5ZrfQiq0O4NAZmwL9s=\");\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Questions","props","_s","responses","setResponses","handleCheckboxChange","question","isChecked","console","log","q","prevResponses","questions","type","category","children","fileName","_jsxFileName","lineNumber","columnNumber","map","style","margin","color","fontSize","fontWeight","checked","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/santhoshmg/Projects/mental-wellness/src/Screen/Questions.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Questions = (props) => {\n  const [responses, setResponses] = useState({});\n\n  const handleCheckboxChange = (question, isChecked) => {\n    console.log(\"The Question \", q)\n    setResponses((prevResponses) => ({\n      ...prevResponses,\n      [question]: isChecked,\n    }));\n  };\n  const questions = [\n    {\n      question:\n        \"Is there any change in your sleep pattern, appetite, or energy level?\",\n      type: \"Yes/No\",\n      category: [],\n    },\n    {\n      question:\n        \"Have you been consistently feeling anxious or overwhelmed lately?\",\n      type: \"Yes/No\",\n      category: [],\n    },\n    {\n      question:\n        \"Have you had sudden moments of intense fear or panic recently?\",\n      type: \"Yes/No\",\n      category: [],\n    },\n    {\n      question: \"Have your moods been noticeably changing frequently?\",\n      type: \"Yes/No\",\n      category: [],\n    },\n    {\n      question: \"Have you been feeling depressed lately?\",\n      type: \"Yes/No\",\n      category: [],\n    },\n    {\n      question:\n        \"Do you experience physical symptoms such as tension or headaches when stressed?\",\n      type: \"Yes/No\",\n      category: [],\n    },\n    {\n      question: \"Have you been experiencing a lack of calmness recently?\",\n      type: \"Yes/No\",\n      category: [],\n    },\n  ];\n  const category = {\n    \"\": \"\",\n  };\n  return (\n    <div>\n      <h2>Questionnaire</h2>\n      <form>\n        {questions.map((q) => (\n          <div key={q.question} style={{ margin: \"20px\" }}>\n            <label\n              style={{\n                color: \"#513d87\",\n                fontSize: \"20px\",\n                fontWeight: \"500\",\n                margin: \"10px\",\n              }}\n            >\n              <input\n                type=\"checkbox\"\n                checked={responses[q.question] || false}\n                onChange={(e) =>\n                  handleCheckboxChange(q.question, e.target.checked)\n                }\n              />\n              {q.question}\n            </label>\n          </div>\n        ))}\n      </form>\n      {/* <div>\n            <h3>Responses:</h3>\n            <pre>{JSON.stringify(responses, null, 2)}</pre>\n          </div> */}\n    </div>\n  );\n};\n\nexport default Questions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9C,MAAMQ,oBAAoB,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;IACpDC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,CAAC,CAAC;IAC/BN,YAAY,CAAEO,aAAa,KAAM;MAC/B,GAAGA,aAAa;MAChB,CAACL,QAAQ,GAAGC;IACd,CAAC,CAAC,CAAC;EACL,CAAC;EACD,MAAMK,SAAS,GAAG,CAChB;IACEN,QAAQ,EACN,uEAAuE;IACzEO,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,QAAQ,EACN,mEAAmE;IACrEO,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,QAAQ,EACN,gEAAgE;IAClEO,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,QAAQ,EAAE,sDAAsD;IAChEO,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,QAAQ,EAAE,yCAAyC;IACnDO,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,QAAQ,EACN,iFAAiF;IACnFO,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,QAAQ,EAAE,yDAAyD;IACnEO,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE;EACZ,CAAC,CACF;EACD,MAAMA,QAAQ,GAAG;IACf,EAAE,EAAE;EACN,CAAC;EACD,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA;MAAAgB,QAAA,EACGH,SAAS,CAACQ,GAAG,CAAEV,CAAC,iBACfX,OAAA;QAAsBsB,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAO,CAAE;QAAAP,QAAA,eAC9ChB,OAAA;UACEsB,KAAK,EAAE;YACLE,KAAK,EAAE,SAAS;YAChBC,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE,KAAK;YACjBH,MAAM,EAAE;UACV,CAAE;UAAAP,QAAA,gBAEFhB,OAAA;YACEc,IAAI,EAAC,UAAU;YACfa,OAAO,EAAEvB,SAAS,CAACO,CAAC,CAACJ,QAAQ,CAAC,IAAI,KAAM;YACxCqB,QAAQ,EAAGC,CAAC,IACVvB,oBAAoB,CAACK,CAAC,CAACJ,QAAQ,EAAEsB,CAAC,CAACC,MAAM,CAACH,OAAO;UAClD;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,EACDT,CAAC,CAACJ,QAAQ;QAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC,GAjBAT,CAAC,CAACJ,QAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBf,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKJ,CAAC;AAEV,CAAC;AAACjB,EAAA,CAtFIF,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAwFf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}