{"ast":null,"code":"var _jsxFileName = \"/Users/santhoshmg/Projects/mental-wellness/src/Context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const websiteState = {\n    moodTracker: \"\",\n    questionsSelected: [],\n    userData: null,\n    date: null\n  };\n  const websiteDataKey = \"websitedata\";\n  function isEightHoursPassed() {\n    const earlierTimestamp = new Date(websiteState.date).getTime(); // Replace this with your earlier recorded time\n    const currentTimestamp = new Date().getTime();\n    const eightHoursInMilliseconds = 8 * 60 * 60 * 1000; // 8 hours in milliseconds\n    const timeDifference = currentTimestamp - earlierTimestamp;\n    return timeDifference >= eightHoursInMilliseconds;\n  }\n  const timeRemaining = () => {\n    const localdata = JSON.parse(localStorage.getItem(websiteDataKey));\n    console.log(\"THE LOCALA DATE \", localdata.date);\n    const earlierTimestamp = new Date(localdata.date).getTime(); // Replace this with your earlier recorded time\n    const currentTimestamp = new Date().getTime();\n    const eightHoursInMilliseconds = 8 * 60 * 60 * 1000; // 8 hours in milliseconds\n\n    const timeDifference = eightHoursInMilliseconds - (currentTimestamp - earlierTimestamp);\n    if (timeDifference <= 0) {\n      return \"It's been 8 hours or more since the earlier recorded time.\";\n    } else {\n      const hours = Math.floor(timeDifference / (60 * 60 * 1000));\n      const minutes = Math.ceil(timeDifference % (60 * 60 * 1000) / (60 * 1000));\n      return `Remaining time: ${hours} hours and ${minutes} minutes.`;\n    }\n  };\n  const getDateFormat = () => {\n    const date = new Date();\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Note: Month starts from 0\n    const year = date.getFullYear().toString();\n    const hours = date.getHours().toString().padStart(2, \"0\");\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\n    const formattedDate = `${day}/${month}/${year} ${hours}:${minutes}`;\n    return formattedDate;\n  };\n  const getMood = () => {\n    const localdata = JSON.parse(localStorage.getItem(websiteDataKey));\n    return moodData = {};\n  };\n  const setMoodTracker = mood => {\n    websiteState.moodTracker = mood;\n    websiteState.date = new Date();\n    localStorage.setItem(websiteDataKey, JSON.stringify(websiteState));\n  };\n  const setQuestionsList = list => {\n    websiteState.questionsSelected = list;\n    websiteState.date = new Date();\n    localStorage.setItem(websiteDataKey, JSON.stringify(websiteState));\n  };\n  const setUserInformation = userInfo => {\n    websiteState.userData = userInfo;\n    websiteState.date = new Date();\n    localStorage.setItem(websiteDataKey, JSON.stringify(websiteState));\n  };\n  const getWebsiteState = () => {\n    const val = JSON.parse(localStorage.getItem(websiteDataKey));\n    return val;\n  };\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setUser(user);\n    });\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      websiteState,\n      setMoodTracker,\n      setQuestionsList,\n      setUserInformation,\n      getWebsiteState,\n      getDateFormat,\n      timeRemaining,\n      isEightHoursPassed\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","auth","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","websiteState","moodTracker","questionsSelected","userData","date","websiteDataKey","isEightHoursPassed","earlierTimestamp","Date","getTime","currentTimestamp","eightHoursInMilliseconds","timeDifference","timeRemaining","localdata","JSON","parse","localStorage","getItem","console","log","hours","Math","floor","minutes","ceil","getDateFormat","day","getDate","toString","padStart","month","getMonth","year","getFullYear","getHours","getMinutes","formattedDate","getMood","moodData","setMoodTracker","mood","setItem","stringify","setQuestionsList","list","setUserInformation","userInfo","getWebsiteState","val","unsubscribe","onAuthStateChanged","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/santhoshmg/Projects/mental-wellness/src/Context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const websiteState = {\n    moodTracker: \"\",\n    questionsSelected: [],\n    userData: null,\n    date: null,\n  };\n  const websiteDataKey = \"websitedata\";\n\n  function isEightHoursPassed() {\n    const earlierTimestamp = new Date(websiteState.date).getTime(); // Replace this with your earlier recorded time\n    const currentTimestamp = new Date().getTime();\n    const eightHoursInMilliseconds = 8 * 60 * 60 * 1000; // 8 hours in milliseconds\n    const timeDifference = currentTimestamp - earlierTimestamp;\n\n    return timeDifference >= eightHoursInMilliseconds;\n  }\n\n  const timeRemaining = () => {\n    const localdata = JSON.parse(localStorage.getItem(websiteDataKey));\n    console.log(\"THE LOCALA DATE \", localdata.date);\n    const earlierTimestamp = new Date(localdata.date).getTime(); // Replace this with your earlier recorded time\n    const currentTimestamp = new Date().getTime();\n    const eightHoursInMilliseconds = 8 * 60 * 60 * 1000; // 8 hours in milliseconds\n\n    const timeDifference =\n      eightHoursInMilliseconds - (currentTimestamp - earlierTimestamp);\n\n    if (timeDifference <= 0) {\n      return \"It's been 8 hours or more since the earlier recorded time.\";\n    } else {\n      const hours = Math.floor(timeDifference / (60 * 60 * 1000));\n      const minutes = Math.ceil(\n        (timeDifference % (60 * 60 * 1000)) / (60 * 1000)\n      );\n      return `Remaining time: ${hours} hours and ${minutes} minutes.`;\n    }\n  };\n\n  const getDateFormat = () => {\n    const date = new Date();\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Note: Month starts from 0\n    const year = date.getFullYear().toString();\n    const hours = date.getHours().toString().padStart(2, \"0\");\n    const minutes = date.getMinutes().toString().padStart(2, \"0\");\n\n    const formattedDate = `${day}/${month}/${year} ${hours}:${minutes}`;\n    return formattedDate;\n  };\n\n  const getMood = () => {\n    const localdata = JSON.parse(localStorage.getItem(websiteDataKey));\n    return moodData = {\n      \n    }\n  }\n\n  const setMoodTracker = (mood) => {\n    websiteState.moodTracker = mood;\n    websiteState.date = new Date();\n\n    localStorage.setItem(websiteDataKey, JSON.stringify(websiteState));\n  };\n\n  const setQuestionsList = (list) => {\n    websiteState.questionsSelected = list;\n    websiteState.date = new Date();\n\n    localStorage.setItem(websiteDataKey, JSON.stringify(websiteState));\n  };\n\n  const setUserInformation = (userInfo) => {\n    websiteState.userData = userInfo;\n    websiteState.date = new Date();\n\n    localStorage.setItem(websiteDataKey, JSON.stringify(websiteState));\n  };\n\n  const getWebsiteState = () => {\n    const val = JSON.parse(localStorage.getItem(websiteDataKey));\n    return val;\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setUser(user);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        setUser,\n        websiteState,\n        setMoodTracker,\n        setQuestionsList,\n        setUserInformation,\n        getWebsiteState,\n        getDateFormat,\n        timeRemaining,\n        isEightHoursPassed,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,IAAI,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMW,YAAY,GAAG;IACnBC,WAAW,EAAE,EAAE;IACfC,iBAAiB,EAAE,EAAE;IACrBC,QAAQ,EAAE,IAAI;IACdC,IAAI,EAAE;EACR,CAAC;EACD,MAAMC,cAAc,GAAG,aAAa;EAEpC,SAASC,kBAAkBA,CAAA,EAAG;IAC5B,MAAMC,gBAAgB,GAAG,IAAIC,IAAI,CAACR,YAAY,CAACI,IAAI,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;IAChE,MAAMC,gBAAgB,GAAG,IAAIF,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAC7C,MAAME,wBAAwB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;IACrD,MAAMC,cAAc,GAAGF,gBAAgB,GAAGH,gBAAgB;IAE1D,OAAOK,cAAc,IAAID,wBAAwB;EACnD;EAEA,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACb,cAAc,CAAC,CAAC;IAClEc,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEN,SAAS,CAACV,IAAI,CAAC;IAC/C,MAAMG,gBAAgB,GAAG,IAAIC,IAAI,CAACM,SAAS,CAACV,IAAI,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7D,MAAMC,gBAAgB,GAAG,IAAIF,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAC7C,MAAME,wBAAwB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;IAErD,MAAMC,cAAc,GAClBD,wBAAwB,IAAID,gBAAgB,GAAGH,gBAAgB,CAAC;IAElE,IAAIK,cAAc,IAAI,CAAC,EAAE;MACvB,OAAO,4DAA4D;IACrE,CAAC,MAAM;MACL,MAAMS,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACX,cAAc,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;MAC3D,MAAMY,OAAO,GAAGF,IAAI,CAACG,IAAI,CACtBb,cAAc,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,IAAK,EAAE,GAAG,IAAI,CAClD,CAAC;MACD,OAAQ,mBAAkBS,KAAM,cAAaG,OAAQ,WAAU;IACjE;EACF,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMtB,IAAI,GAAG,IAAII,IAAI,CAAC,CAAC;IAEvB,MAAMmB,GAAG,GAAGvB,IAAI,CAACwB,OAAO,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACtD,MAAMC,KAAK,GAAG,CAAC3B,IAAI,CAAC4B,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACjE,MAAMG,IAAI,GAAG7B,IAAI,CAAC8B,WAAW,CAAC,CAAC,CAACL,QAAQ,CAAC,CAAC;IAC1C,MAAMR,KAAK,GAAGjB,IAAI,CAAC+B,QAAQ,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACzD,MAAMN,OAAO,GAAGpB,IAAI,CAACgC,UAAU,CAAC,CAAC,CAACP,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAE7D,MAAMO,aAAa,GAAI,GAAEV,GAAI,IAAGI,KAAM,IAAGE,IAAK,IAAGZ,KAAM,IAAGG,OAAQ,EAAC;IACnE,OAAOa,aAAa;EACtB,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMxB,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACb,cAAc,CAAC,CAAC;IAClE,OAAOkC,QAAQ,GAAG,CAElB,CAAC;EACH,CAAC;EAED,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC/BzC,YAAY,CAACC,WAAW,GAAGwC,IAAI;IAC/BzC,YAAY,CAACI,IAAI,GAAG,IAAII,IAAI,CAAC,CAAC;IAE9BS,YAAY,CAACyB,OAAO,CAACrC,cAAc,EAAEU,IAAI,CAAC4B,SAAS,CAAC3C,YAAY,CAAC,CAAC;EACpE,CAAC;EAED,MAAM4C,gBAAgB,GAAIC,IAAI,IAAK;IACjC7C,YAAY,CAACE,iBAAiB,GAAG2C,IAAI;IACrC7C,YAAY,CAACI,IAAI,GAAG,IAAII,IAAI,CAAC,CAAC;IAE9BS,YAAY,CAACyB,OAAO,CAACrC,cAAc,EAAEU,IAAI,CAAC4B,SAAS,CAAC3C,YAAY,CAAC,CAAC;EACpE,CAAC;EAED,MAAM8C,kBAAkB,GAAIC,QAAQ,IAAK;IACvC/C,YAAY,CAACG,QAAQ,GAAG4C,QAAQ;IAChC/C,YAAY,CAACI,IAAI,GAAG,IAAII,IAAI,CAAC,CAAC;IAE9BS,YAAY,CAACyB,OAAO,CAACrC,cAAc,EAAEU,IAAI,CAAC4B,SAAS,CAAC3C,YAAY,CAAC,CAAC;EACpE,CAAC;EAED,MAAMgD,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,GAAG,GAAGlC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACb,cAAc,CAAC,CAAC;IAC5D,OAAO4C,GAAG;EACZ,CAAC;EAED3D,SAAS,CAAC,MAAM;IACd,MAAM4D,WAAW,GAAG3D,IAAI,CAAC4D,kBAAkB,CAAErD,IAAI,IAAK;MACpDC,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC;IAEF,OAAO,MAAMoD,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzD,OAAA,CAACC,WAAW,CAAC0D,QAAQ;IACnBC,KAAK,EAAE;MACLvD,IAAI;MACJC,OAAO;MACPC,YAAY;MACZwC,cAAc;MACdI,gBAAgB;MAChBE,kBAAkB;MAClBE,eAAe;MACftB,aAAa;MACbb,aAAa;MACbP;IACF,CAAE;IAAAV,QAAA,EAEDA;EAAQ;IAAA0D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5D,EAAA,CAjHWF,YAAY;AAAA+D,EAAA,GAAZ/D,YAAY;AAAA,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}