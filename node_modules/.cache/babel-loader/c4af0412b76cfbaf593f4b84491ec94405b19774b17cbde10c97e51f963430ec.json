{"ast":null,"code":"var _jsxFileName = \"/Users/santhoshmg/Projects/mental-wellness/src/Screen/Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = props => {\n  _s();\n  const [responses, setResponses] = useState({});\n  const handleCheckboxChange = (question, isChecked) => {\n    setResponses(prevResponses => ({\n      ...prevResponses,\n      [question]: isChecked\n    }));\n  };\n  const questions = [{\n    question: \"Is there any change in your sleep pattern, appetite, or energy level?\",\n    type: \"Yes/No\",\n    category: \"\"\n  }, {\n    question: \"Have you been consistently feeling anxious or overwhelmed lately?\",\n    type: \"Yes/No\",\n    category: \"\"\n  }, {\n    question: \"Have you had sudden moments of intense fear or panic recently?\",\n    type: \"Yes/No\",\n    category: \"\"\n  }, {\n    question: \"Have your moods been noticeably changing frequently?\",\n    type: \"Yes/No\",\n    category: \"\"\n  }, {\n    question: \"Have you been feeling depressed lately?\",\n    type: \"Yes/No\",\n    category: \"\"\n  }, {\n    question: \"Do you experience physical symptoms such as tension or headaches when stressed?\",\n    type: \"Yes/No\",\n    category: \"\"\n  }, {\n    question: \"Have you been experiencing a lack of calmness recently?\",\n    type: \"Yes/No\",\n    category: \"\"\n  }];\n  const category = {\n    \"\": \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Questionnaire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: responses[q.question] || false,\n            onChange: e => handleCheckboxChange(q.question, e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this), q.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, q.question, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Responses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(responses, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Questions, \"p+LtuSuoZ5ZrfQiq0O4NAZmwL9s=\");\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Questions","props","_s","responses","setResponses","handleCheckboxChange","question","isChecked","prevResponses","questions","type","category","children","fileName","_jsxFileName","lineNumber","columnNumber","map","q","checked","onChange","e","target","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/santhoshmg/Projects/mental-wellness/src/Screen/Questions.js"],"sourcesContent":["import React, { useState } from \"react\"\n\nconst Questions = (props) => {\n    const [responses, setResponses] = useState({});\n\n    const handleCheckboxChange = (question, isChecked) => {\n      setResponses((prevResponses) => ({\n        ...prevResponses,\n        [question]: isChecked,\n      }));\n    };\n    const questions = [\n        {\n          question: \"Is there any change in your sleep pattern, appetite, or energy level?\",\n          type: \"Yes/No\",\n          category: \"\"\n        },\n        {\n          question: \"Have you been consistently feeling anxious or overwhelmed lately?\",\n          type: \"Yes/No\",\n          category: \"\"\n          \n        },\n        {\n          question: \"Have you had sudden moments of intense fear or panic recently?\",\n          type: \"Yes/No\",\n          category: \"\"\n        },\n        {\n          question: \"Have your moods been noticeably changing frequently?\",\n          type: \"Yes/No\",\n          category: \"\"\n        },\n        {\n          question: \"Have you been feeling depressed lately?\",\n          type: \"Yes/No\",\n          category: \"\"\n        },\n        {\n          question: \"Do you experience physical symptoms such as tension or headaches when stressed?\",\n          type: \"Yes/No\",\n          category: \"\"\n        },\n        {\n          question: \"Have you been experiencing a lack of calmness recently?\",\n          type: \"Yes/No\",\n          category: \"\"\n        }\n      ];\n      const category = {\n        \"\": \"\"\n      }\n      return (\n        <div>\n          <h2>Questionnaire</h2>\n          <form>\n            {questions.map((q) => (\n              <div key={q.question}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={responses[q.question] || false}\n                    onChange={(e) => handleCheckboxChange(q.question, e.target.checked)}\n                  />\n                  {q.question}\n                </label>\n              </div>\n            ))}\n          </form>\n          <div>\n            <h3>Responses:</h3>\n            <pre>{JSON.stringify(responses, null, 2)}</pre>\n          </div>\n        </div>\n      );\n    };\n\nexport default Questions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}